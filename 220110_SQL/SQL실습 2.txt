
SELECT ename, deptno, sal FROM emp WHERE hiredate >= '1982-12-22' ;
날짜는 항상 이전, 이후만 씀 (초과, 미만은 쓰지 않음)

SELECT ename AS 이름, sal*12 AS 연봉  FROM emp WHERE sal * 12 >= 36000;
ORDER BY 절에서는 별칭을 쓸 수 있으나, WHERE 절에서는 본명을 쓴다!

SELECT ename, sal FROM emp WHERE ename LIKE 'S%';
와일드카드 % 는 여러 글자!

SELECT ename, sal FROM emp WHERE ename LIKE '_M%';
언더바 _ 는 한 글자!

* NULL : 데이터가 할당되지 않은 상태 = 알 수 없는 값 -> 연산자 사용 불가, IS NULL을 사용함

SELECT ename, IFNULL(comm,1) * sal FROM emp;
IFNULL로 NULL값을 대체하는 데이터를 넣을 수 있음!

SELECT ename, sal, job FROM emp WHERE job IN ('salesman', 'analyst', 'manager');
SELECT ename, sal, job FROM emp WHERE job = 'salesman' OR job = 'analyst' OR job = 'manager';

*MySQL에는 INITCAP 기능이 없다
SELECT UPPER(ename) AS 대문자, LOWER(ename) AS 소문자, 
CONCAT(UPPER(LEFT(ename,1)),LOWER(SUBSTRING(ename,2))) AS 첫글자대문자 FROM emp;

*SUBSTRING (MySQL) = SUBSTR(Oracle)

SELECT REPLACE(ename, SUBSTRING(ename, 2) , '*') AS 보안이름 FROM emp;
이름이 'K*' <로 출력됨

SELECT ename AS 이름, lpad(sal, 10, '*') AS 월급 FROM emp;

SELECT ename AS 이름, sal, LPAD('■', round(sal/100), '■') AS 그림으로 FROM emp;
LPAD(네모를, 자릿수만큼, 네모계속출력)

SELECT ename AS 이름, round(sal,-3) FROM emp;
천(1000)의 자리까지 반올림

SELECT empno AS 사원번호, MOD(empno,2) AS 홀짝 FROM emp;
사원번호가 홀수면 1, 짝수면 0

SELECT ename AS 이름, hiredate AS 입사일, 
		 TIMESTAMPDIFF(YEAR,hiredate,CURDATE()) AS 근무년수,
		 TIMESTAMPDIFF(MONTH,hiredate,CURDATE()) AS 근무일수,
		 TIMESTAMPDIFF(WEEK,hiredate,CURDATE()) AS 근무주수,
		 TIMESTAMPDIFF(DAY,hiredate,CURDATE()) AS 근무일수
FROM emp;
CURDATE()는 현재날짜만, NOW()는 현재날짜와 시간까지! TIMESTAMPDIFF(계산기준, 이전날짜, 이후날짜)

<INSERT 심화>

INSERT INTO testdb VALUES (1,'우디',25);
INSERT INTO testdb (toy_id, toy_name) VALUES (2,'버즈');
일부 열에만 데이터를 기입할 경우 열 이름을 기재해줘야 한다 (입력하지 않은 값은 NULL로 기입된다)

- AUTO_INCREMENT : 1부터 증가하는 값을 자동으로 입력함 -> INSERT할 때 열을 생략하고 입력함
		   반드시 PRIMARY KEY로 지정해야만 함

CREATE TABLE testdb2 (toy_id INT AUTO_INCREMENT PRIMARY KEY, toy_name VARCHAR(4), age INT);
INSERT INTO testdb2 VALUES(NULL,'영희',20)

SELECT LAST_INSERT_ID();
가장 마지막에 입력한 값의 ID(PRIMARY KEY값)를 보여줌

SET @@auto_increment_increment=3;
-> auto_increment의 증가값 설정

SELECT COUNT(*) FROM testtb2;
데이터가 몇행이 있는지 출력

DESC sqldb.testtb2;
테이블 구조 출력

SELECT * FROM testtb2 LIMIT 3;
3행까지만 출력

INSERT INTO testtb3 SELECT toy_name, age FROM testtb2
다른 테이블의 데이터를 입력

<UPDATE 심화 - 데이터 수정>

UPDATE testtb2 SET toy_name = '서울' WHERE toy_name = '영희';
특정한 값에 데이터 바꿔주기

UPDATE testtb3 SET toy_name = '대구';
테이블의 특정 열의 모든 값을 바꾸기

============== 오라클 문법 ==============

SELECT ename, MONTHS_BETWEEN(SYSDATE,hiredate) FROM emp;

SELECT TO_DATE('2019-06-01','YYYY-MM-DD') - TO_DATE('2018-10-01','RRRR-MM-DD') FROM dual;
-> 날짜 간 일수 차이 구하기

SELECT ADD_MONTHS(TO_DATE('2019-05-01','RRRR-MM-DD'),10) FROM dual;
-> 10개월 후 날짜 구하기

SELECT '2019-05-01' AS 날짜, NEXT_DAY('2019-05-01', 'MONDAY') FROM dual;
-> 특정 날짜 이후의 요일의 날짜 구하기

SELECT SYSDATE AS 날짜, NEXT_DAY(ADD_MONTHS(SYSDATE, 5), 'WEDNESDAY') FROM dual;
-> 현재 날짜에서 일정 기간 뒤의 특정 요일의 날짜 구하기

SELECT LAST_DAY(SYSDATE) - SYSDATE FROM dual;
-> 현재 월의 마지막 날까지 남은 일수 구하기

SELECT ename, TO_CHAR(hiredate, 'day'), sal FROM emp WHERE ename = 'SCOTT';
-> 입사일의 요일 구하기

* TO_CHAR() : 숫자형, 날짜형 -> 문자형
	      특히 날짜형은 문자로 변환하여 년, 월, 일, 요일 등을 추출

SELECT ename,
        EXTRACT(year from hiredate) as 연도,
        EXTRACT(month from hiredate) as 달,
        EXTRACT(day from hiredate) as 날
FROM emp;
-> 각 날짜를 추출하는 또다른 방법

SELECT ename, to_char(sal, '999,999') as 급여 FROM emp;
-> 9가 숫자를 의미하는 기호로 쓰임, 천 단위에 쉼표 넣어서 출력하기

SELECT ename, to_char(sal, 'L999,999') as 급여 FROM emp;
-> L = 화폐 기호

TO_DATE 함수
SELECT * FROM emp WHERE hiredate = '81/11/17';
-> 날짜데이터가 입력된 형식과 같게 입력해주면, 연월일 구분 필요없음

SELECT * FROM emp WHERE hiredate = TO_DATE('81/11/17', 'RR/MM/DD');
-> 연 월 일을 구분해줌


#형변환

<암묵적 형변환>
SELECT ename, sal FROM emp WHERE sal = '3000' ;
-> sal 열에는 INT데이터로 지정되어있는데, 문자열과 비교했을 때 정상적으로 처리됨 -> 오라클이 암묵적으로 형변환을 해줌

<명시적 형변환>
SELECT ename, sal FROM emp32 WHERE TO_NUMBER(sal) = 3000;


# NVL 

SELECT ename, comm, NVL(comm,0) FROM emp;
-> comm에 null값이 있는데, NVL로 COMM의 null값을 0으로 바꿔 출력하기 (원본은 그대로 있음!)
SELECT ename, sal, comm, sal+NVL(comm,0) FROM emp;
-> null값이 있는 행과 연산할 때 자주 쓰임~!

# NVL2
SELECT ename, sal, comm, NVL2(comm, sal+comm, sal) FROM emp;
-> NVL2 (열이름, null이 아닐때 연산식, null일때 연산식)










SELECT TO_CHAR(TO_DATE(50,'yy'),'YYYY'), TO_CHAR(TO_DATE(50,'rr'),'RRRR'),
       TO_CHAR(TO_DATE(49,'yy'),'YYYY'), TO_CHAR(TO_DATE(49,'rr'),'RRRR')
FROM dual;



