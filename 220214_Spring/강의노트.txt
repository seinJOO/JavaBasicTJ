## 스프링 프레임워크

1. 복잡함에 반기를 들어서 만들어진 프레임워크
2. 프로젝트의 전체 구조를 설계할 때 유용한 프레임워크 (OOP 구조를 뒷받침하는 구조를 설계하는 사상)
	=> 의존성 주입
3. 다른 프레임워크들을 포용 :
	다른 프레임워크들과 통합지원하기 때문에 최소한의 수정이 가능함
	기본 뼈대를 크게 흔들지 않고 여러 종류의 프레임워크를 혼용해서 사용 가능
4. 개발 생산성과 개발도구 지원 :
	코드 양을 줄일 수 있음
	유지보수에서 XML의 설정 등을 이용하여 선호도가 높음

Spring의 버전들
- Spring 2.5버전 : 어노테이션(Annotation)을 활용하는 설정을 도입하면서 편리한 설정과 개발이 가능
하도록 지원
- Spring 3.0버전 : 별도의 설정 없이도 Java클래스만으로 설정 파일을 대신할 수 있게 지원
- Spring 4.0버전 : 모바일 환경과 월 환경에서 많이 사용되는 REST방식의 컨트롤러 지원
- Spring 5.0버전 : Reactor를 이용한 Reactive 스타일의 개발 환경 지원(*)

- 스프링 프레임워크는 주요기능으로 DI, AOP, MVC, JDBC 등을 제공한다

# 스프링프레임워크 특징
1. POJO(Plain Old Java Object) 기반의 프레임워크
	자바 객체의 라이프사이클을 스프링 컨테이너가 직접 관리하며, 
	스프링 컨테이너로부터 필요한 객체를 얻어올 수 있습니다.

2. DI(Dependency Injection)을 지원
	각 계층이나 서비스 들 사이 또는 객체들 사이에 의존성이 존재할 경우 
	스프링 프레임워크가 서로를 연결시켜줍니다. 이는 클래스들 사이에 약한 결합을 가능케 합니다.

3. AOP(Aspect Oriented Programming)를 지원 - 필수 기능은 아님
	트랜잭션, 로깅, 보안 등 여러 모듈에서 공통적으로 지원하는 기능을 분리하여 사용할 수 있습니다.
		=> 공통 기능 중 필요한 부분을 조금씩 수정하여 사용 가능

4. 확장성이 높다.
	스프링 프레임워크의 소스는 모두 라이브러리로 분리시켜 놓음으로써 필요한 라이브러리만 가져다 쓸 수 있음
	많은 외부 라이브러리들도 이미 스프링 프레임워크와 연동되고 있음

5. Model2 방식의 MVC Framework를 지원

<스프링 프레임워크 설정>

#pom.xml - 설정값을 정의하는 파일
	dependencies : 데이터를 이렇게 처리하겠다~





