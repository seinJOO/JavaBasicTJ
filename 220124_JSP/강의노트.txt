# JSP 설치
# JSP vs Servlet

# JSP 태그
   - 스크립틀릿 : <% %>
   - 지시자(directive) : <%@ %>
   - 선언자(declaration) : <%! %>
   - 표현식(expression) : <%= %>
   - 주석(comment) : <%-- --%>

# JSP 내장객체
   - request 객체 : 페이지에서 다른 페이지 파라미터 값을 전달
   - response 객체 : 응답 객체
   - out 객체 : 화면 출력 => 표현식...
   - cookie(내장객체X)와 session : 추가 정보를 설정하기 위한 객체(인증)
   - application 객체 : 프로그램 시작과 동시에 생성. 종료시까지 계속 동작
	=> 요구되는 생명주기에 따라 cookie, session, application 각각 필요 시에 활용

## 예외 페이지
   - 예외 상황이 발생했을 경우 웹 컨테이너(톰캣)에서 제공되는 기본 예외페이지를 보여줌
   - 개발 과정에서 이런 예외 페이지를 보고 어떤 에러가 발생했는 지 알 수 있기 때문에 에러 수정에 도움이 됨
   - 하지만, 상용 서비스 제공 중에 에러페이지를 사용자에게 보여준다면 불편함을 줄 수 있고, 신뢰도를 떨어뜨림
   - 또한 코드의 일부가 노출되면 보안 측면에서 좋지 않은 영향을 미침
   =>이런 이유로 개발자가 따로 만들어놓은 "에러페이지"로 유도하여 사용자에게 친숙한 페이지를 노출하는 처리

## HTTP 주요 응답 상태 코드
   - 200번대 : 요청을 성공적으로 처리함 (어떤 종류의 요청인지 확인 가능)
   - 300번대 : 상태의 진행, 전환 (redirect)
   - 307 : 임시로  페이지를 리다이렉트함(강제로 전환)
   - 오류 -
   - 400 번대는 클라이언트 측 오류
	- 400 : 클라이언트 요청이 잘못된 구문으로 작성되어 있음
	- 404 : 요청URL을 찾을 수 없음
	- 405 : 요청 반식을 허용하지 않음(GET, POST방식)
   - 500 번대는 서버측 오류
	- 503 : 서버가 일시적으로 서비스를 제공할 수 없음 (일시적 서버 과부하, 서버 임시 보수 등)

## web.xml을 통한 예외 페이지 지정 
	1) 응답코드를 이용한 처리 (<error-code>404</error-code>)
	2) 에러타입을 통한 처리 (<exeption-type>java.lang.NumberFormatException</exeption-type>)

## 에러 페이지의 우선순위 (여러 방법으로 에러페이지를 지정한 경우 우선순위)
	1. 페이지 지시자 태그의 errorPage 속성에 지정한 페이지
	2. web.xml에 지정한 에러 타입에 따른 페이지
	3. web.xml에 지정한 응답 상태 코드에 따른 페이지
	4. 1~3번에 속하지 않은 경우, 톰캣이 제공하는 기본 에러페이지

## JSP Action Tag - JSP페이지 내에서 어떤 동작을 하도록 지시하는 태그
	- 액션 태그는 태그 형식을 그대로 가지고 있기 때문에 열리는 태그, 닫는 태그 모두 존재해야 함
	- 단, 추가적으로 종속된 태그가 없는 경우에는 끝에 "/" 처리하면 닫는 태그는 생략됨 (*)
           # 종류 (등등)
	- 페이지 이동을 강제하는 forward (서블릿에서는 RequestDispatcher객체와 함께 사용) 				        
	- 페이지를 삽입하는 include
	- forward나 include를 할 때 값을 지정하는 param 
	- 자바 클래스와 연동하는 useBean -> java의 클래스나 변수를 끌어다 쓸 수 있음

* forward vs sendRedirect (처리하고자 하는 결과값이 어떻게 작동해야 하는지에 따라 나뉘는 듯?!)
   forward - url은 변경되지 않고 컨텐츠 내용을 끌어와서 보여줌
   	  - 페이지가 변경되지 않기 때문에 request값을 계속 사용 가능
	  - forward 이동 처리를 시킨 페이지와 서버(컨테이너) 내에서 자체적으로 작업을 처리해서 결과를 보여줌 (=내부동작)

   sendRedirect :   - 요청을 처리한 후 나온 결과값을 다른 곳으로 전달할 필요가 없을 경우 사용
		- 결과값을 처리한 후 업데이트 된 값을 재요청해야 할 경우 사용

===============
 ## forward
===============
 ## include : 해당 섹션 내용을 넣고자 할때 사용
===============
 ## param : 파라미터값을 추가로 지정해서 넘길 수 있음 - 액션태그 내에 <jsp:param value="값" name="이름" />









